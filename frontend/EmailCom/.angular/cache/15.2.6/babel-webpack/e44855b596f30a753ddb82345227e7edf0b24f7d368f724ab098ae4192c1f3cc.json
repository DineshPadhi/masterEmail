{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../filter.service\";\nimport * as i4 from \"src/app/shared/form-inp/form-inp.component\";\nimport * as i5 from \"@angular/platform-browser\";\nimport * as i6 from \"ngx-toastr\";\nconst _c0 = [\"iframe\"];\nexport class UpdateUserComponent {\n  constructor(active, fb, FilterService, router,\n  // private form: FormComponent,\n  form, sanitizer, toastr) {\n    this.active = active;\n    this.fb = fb;\n    this.FilterService = FilterService;\n    this.router = router;\n    this.form = form;\n    this.sanitizer = sanitizer;\n    this.toastr = toastr;\n    this.dropdownList = [];\n    this.dropdownSettings = {};\n    this.htmlContent = '';\n    this.dropdownUserList = [];\n    this.dropdownUser = {};\n    this.selectedValue = '';\n    this.createForm();\n  }\n  ngOnInit() {\n    this.dropdownUserList = [{\n      item_id: 1,\n      item_text: 'User 1'\n    }, {\n      item_id: 2,\n      item_text: 'User 2'\n    }, {\n      item_id: 3,\n      item_text: 'User 3'\n    }];\n    this.dropdownUser = {\n      idField: 'item_id',\n      textField: 'item_text'\n    };\n    this.dropdownList = [{\n      item_id: 1,\n      item_text: 'English'\n    }, {\n      item_id: 2,\n      item_text: 'Hindi'\n    }, {\n      item_id: 3,\n      item_text: 'Marathi'\n    }];\n    this.dropdownSettings = {\n      idField: 'item_id',\n      textField: 'item_text'\n    };\n    this.active.paramMap.subscribe(params => {\n      this.id = params.get('id');\n      this.FilterService.getDataById(this.id).subscribe(result => {\n        this.htmlContent = result.data[0].body;\n        const iframe = document.getElementById('preview_iframe_5');\n        iframe['contentWindow'].document.open();\n        iframe['contentDocument'].write(this.htmlContent);\n        iframe['contentWindow'].document.close();\n        if (this.id) {\n          this.myForm.patchValue({\n            templateName: result.data[0].templateName,\n            templateCode: result.data[0].templateCode,\n            scenario: result.data[0].scenario,\n            providers: result.data[0].providers,\n            user: result.data[0].user,\n            tier: result.data[0].tier,\n            emailType: result.data[0].emailType,\n            activity: result.data[0].activity,\n            status: result.data[0].status,\n            targetAudience: result.data[0].targetAudience,\n            subject: result.data[0].subject,\n            body: result.data[0].body,\n            lang: result.data[0].lang\n          });\n        }\n      });\n    });\n  }\n  createForm() {\n    this.myForm = this.fb.group({\n      templateName: ['', Validators.required],\n      templateCode: ['', Validators.required],\n      scenario: [''],\n      providers: ['', Validators.required],\n      user: ['', Validators.required],\n      tier: ['', Validators.required],\n      emailType: ['', Validators.required],\n      activity: [''],\n      status: ['', Validators.required],\n      targetAudience: ['', Validators.required],\n      subject: ['', Validators.required],\n      body: ['', Validators.required],\n      lang: ['', Validators.required]\n    });\n  }\n  seePreview(event) {\n    this.preview = event.target.value;\n  }\n  reset() {\n    this.myForm.reset();\n  }\n  onSelect(value) {\n    this.selectedValue = value;\n  }\n  updateUser(data) {\n    this.active.paramMap.subscribe(params => {\n      this.id = params.get('id');\n      if (this.id) {\n        this.FilterService.update(this.id, data).subscribe(result => {\n          if (result) {\n            this.router.navigate(['/allTemplateData']);\n            this.toastr.success('Your Data Updated successfully!!');\n          }\n        });\n      }\n    });\n  }\n  safehtmlinput($event) {\n    this.htmlContent = $event.target.value;\n    const iframe = document.getElementById('preview_iframe_5');\n    iframe['contentWindow'].document.open();\n    iframe['contentDocument'].write(this.htmlContent);\n    iframe['contentWindow'].document.close();\n  }\n  edit() {\n    this.myForm.patchValue({\n      templateName: this.form.myForm.value\n    });\n  }\n}\nUpdateUserComponent.ɵfac = function UpdateUserComponent_Factory(t) {\n  return new (t || UpdateUserComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.FilterService), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i4.FormInpComponent), i0.ɵɵdirectiveInject(i5.DomSanitizer), i0.ɵɵdirectiveInject(i6.ToastrService));\n};\nUpdateUserComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UpdateUserComponent,\n  selectors: [[\"app-update-user\"]],\n  viewQuery: function UpdateUserComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.preview_iframe = _t.first);\n    }\n  },\n  decls: 5,\n  vars: 0,\n  consts: [[\"aria-label\", \"breadcrumb\", 1, \"m-4\"], [1, \"breadcrumb\"], [1, \"breadcrumb-item\"], [\"routerLink\", \"/allTemplateData\"]],\n  template: function UpdateUserComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"nav\", 0)(1, \"ol\", 1)(2, \"li\", 2)(3, \"a\", 3);\n      i0.ɵɵtext(4, \"Back\");\n      i0.ɵɵelementEnd()()()();\n    }\n  },\n  dependencies: [i1.RouterLink],\n  styles: [\".underlineHover[_ngcontent-%COMP%]:after {\\n    display: block;\\n    left: 0;\\n    bottom: -10px;\\n    width: 0;\\n    height: 2px;\\n    background-color: #56baed;\\n    content: \\\"\\\";\\n    transition: width 0.2s;\\n  }\\n  \\n  .underlineHover[_ngcontent-%COMP%]:hover {\\n    color: #0d0d0d;\\n  }\\n  \\n  .underlineHover[_ngcontent-%COMP%]:hover:after{\\n    width: 100%;\\n  }\\n\\n  span[_ngcontent-%COMP%] {\\n    color: #92badd;\\n    display:inline-block;\\n    text-decoration: none;\\n    font-weight: 400;\\n  }\\n\\n \\n\\n  .button[_ngcontent-%COMP%]{\\n    display: flex;\\n    justify-content: center;\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZmlsdGVyL3VwZGF0ZS11c2VyL3VwZGF0ZS11c2VyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxjQUFjO0lBQ2QsT0FBTztJQUNQLGFBQWE7SUFDYixRQUFRO0lBQ1IsV0FBVztJQUNYLHlCQUF5QjtJQUN6QixXQUFXO0lBQ1gsc0JBQXNCO0VBQ3hCOztFQUVBO0lBQ0UsY0FBYztFQUNoQjs7RUFFQTtJQUNFLFdBQVc7RUFDYjs7RUFFQTtJQUNFLGNBQWM7SUFDZCxvQkFBb0I7SUFDcEIscUJBQXFCO0lBQ3JCLGdCQUFnQjtFQUNsQjs7OztFQUlBO0lBQ0UsYUFBYTtJQUNiLHVCQUF1QjtFQUN6QiIsInNvdXJjZXNDb250ZW50IjpbIi51bmRlcmxpbmVIb3ZlcjphZnRlciB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbGVmdDogMDtcbiAgICBib3R0b206IC0xMHB4O1xuICAgIHdpZHRoOiAwO1xuICAgIGhlaWdodDogMnB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM1NmJhZWQ7XG4gICAgY29udGVudDogXCJcIjtcbiAgICB0cmFuc2l0aW9uOiB3aWR0aCAwLjJzO1xuICB9XG4gIFxuICAudW5kZXJsaW5lSG92ZXI6aG92ZXIge1xuICAgIGNvbG9yOiAjMGQwZDBkO1xuICB9XG4gIFxuICAudW5kZXJsaW5lSG92ZXI6aG92ZXI6YWZ0ZXJ7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cblxuICBzcGFuIHtcbiAgICBjb2xvcjogIzkyYmFkZDtcbiAgICBkaXNwbGF5OmlubGluZS1ibG9jaztcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgfVxuXG4gXG5cbiAgLmJ1dHRvbntcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICB9XG5cbiAgIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","UpdateUserComponent","constructor","active","fb","FilterService","router","form","sanitizer","toastr","createForm","ngOnInit","dropdownUserList","item_id","item_text","dropdownUser","idField","textField","dropdownList","dropdownSettings","paramMap","subscribe","params","id","get","getDataById","result","htmlContent","data","body","iframe","document","getElementById","open","write","close","myForm","patchValue","templateName","templateCode","scenario","providers","user","tier","emailType","activity","status","targetAudience","subject","lang","group","required","seePreview","event","preview","target","value","reset","onSelect","selectedValue","updateUser","update","navigate","success","safehtmlinput","$event","edit","selectors","viewQuery","i0"],"sourceRoot":"","sources":["/home/chandraprakash/Documents/masterEmail/frontend/EmailCom/src/app/filter/update-user/update-user.component.ts","/home/chandraprakash/Documents/masterEmail/frontend/EmailCom/src/app/filter/update-user/update-user.component.html"],"sourcesContent":["import { Component, ElementRef, ViewChild, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FilterService } from '../filter.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n// import { FormComponent } from 'src/app/home/form/form.component';\nimport { FormInpComponent } from 'src/app/shared/form-inp/form-inp.component';\nimport { FormServiceService } from 'src/app/home/form-service.service';\nimport { FilterComponent } from '../searchFilter/filter.component';\nimport { ToastrService } from 'ngx-toastr';\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-update-user',\n  templateUrl: './update-user.component.html',\n  styleUrls: ['./update-user.component.css'],\n})\nexport class UpdateUserComponent implements OnInit {\n  @ViewChild('iframe') preview_iframe: ElementRef;\n\n  myForm: FormGroup;\n  id: any;\n  dropdownList = [];\n  dropdownSettings: IDropdownSettings = {};\n  data: any;\n  urlSafe: SafeResourceUrl;\n  htmlContent: string = '';\n  dropdownUserList = [];\n  dropdownUser: IDropdownSettings = {};\n\n  constructor(\n    private active: ActivatedRoute,\n    private fb: FormBuilder,\n    private FilterService: FilterService,\n    private router: Router,\n    // private form: FormComponent,\n    private form: FormInpComponent,\n    private sanitizer: DomSanitizer,\n    private toastr: ToastrService\n  ) {\n    this.createForm();\n  }\n\n  ngOnInit(): void {\n    this.dropdownUserList = [\n      { item_id: 1, item_text: 'User 1' },\n      { item_id: 2, item_text: 'User 2' },\n      { item_id: 3, item_text: 'User 3' },\n    ];\n    this.dropdownUser = {\n      idField: 'item_id',\n      textField: 'item_text',\n    };\n\n    this.dropdownList = [\n      { item_id: 1, item_text: 'English' },\n      { item_id: 2, item_text: 'Hindi' },\n      { item_id: 3, item_text: 'Marathi' },\n    ];\n\n    this.dropdownSettings = {\n      idField: 'item_id',\n      textField: 'item_text',\n    };\n\n    this.active.paramMap.subscribe((params) => {\n      this.id = params.get('id');\n\n      this.FilterService.getDataById(this.id).subscribe((result: any) => {\n        this.htmlContent = result.data[0].body;\n        const iframe = document.getElementById('preview_iframe_5');\n        iframe['contentWindow'].document.open();\n        iframe['contentDocument'].write(this.htmlContent);\n        iframe['contentWindow'].document.close();\n        if (this.id) {\n          this.myForm.patchValue({\n            templateName: result.data[0].templateName,\n            templateCode: result.data[0].templateCode,\n            scenario: result.data[0].scenario,\n            providers: result.data[0].providers,\n            user: result.data[0].user,\n            tier: result.data[0].tier,\n            emailType: result.data[0].emailType,\n            activity: result.data[0].activity,\n            status: result.data[0].status,\n            targetAudience: result.data[0].targetAudience,\n            subject: result.data[0].subject,\n            body: result.data[0].body,\n            lang: result.data[0].lang,\n          });\n        }\n      });\n    });\n  }\n\n  createForm() {\n    this.myForm = this.fb.group({\n      templateName: ['', Validators.required],\n      templateCode: ['', Validators.required],\n      scenario: [''],\n      providers: ['', Validators.required],\n      user: ['', Validators.required],\n      tier: ['', Validators.required],\n      emailType: ['', Validators.required],\n      activity: [''],\n      status: ['', Validators.required],\n      targetAudience: ['', Validators.required],\n      subject: ['', Validators.required],\n      body: ['', Validators.required],\n      lang: ['', Validators.required],\n    });\n  }\n\n  preview: any;\n\n  seePreview(event: any) {\n    this.preview = event.target.value;\n  }\n\n  reset() {\n    this.myForm.reset();\n  }\n\n  selectedValue: any = '';\n\n  onSelect(value: any) {\n    this.selectedValue = value;\n  }\n\n  updateUser(data: any) {\n    this.active.paramMap.subscribe((params) => {\n      this.id = params.get('id');\n\n      if (this.id) {\n        this.FilterService.update(this.id, data).subscribe((result: any) => {\n          if (result) {\n            this.router.navigate(['/allTemplateData']);\n            this.toastr.success<any>('Your Data Updated successfully!!');\n          }\n        });\n      }\n    });\n  }\n\n  safehtmlinput($event: any) {\n    this.htmlContent = $event.target.value;\n    const iframe = document.getElementById('preview_iframe_5');\n    iframe['contentWindow'].document.open();\n    iframe['contentDocument'].write(this.htmlContent);\n    iframe['contentWindow'].document.close();\n  }\n\n  edit() {\n    this.myForm.patchValue({\n      templateName: this.form.myForm.value,\n    });\n  }\n}\n","<nav aria-label=\"breadcrumb\" class=\"m-4\">\n  <ol class=\"breadcrumb\">\n    <li class=\"breadcrumb-item\"><a routerLink=\"/allTemplateData\">Back</a></li>\n  </ol>\n</nav>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}