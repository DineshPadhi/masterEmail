{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet FormInpComponent = class FormInpComponent {\n  // dropdownList = [];\n  // dropdownSettings: IDropdownSettings = {};\n  // data: any;\n  // urlSafe: SafeResourceUrl;\n  // htmlContent: string = '';\n  // dropdownUserList = [];\n  // dropdownUser: IDropdownSettings = {};\n  constructor(active, FilterService, fb, formService, router, toastr, sanitizer, form) {\n    this.active = active;\n    this.FilterService = FilterService;\n    this.fb = fb;\n    this.formService = formService;\n    this.router = router;\n    this.toastr = toastr;\n    this.sanitizer = sanitizer;\n    this.form = form;\n    // @ViewChild('iframe') preview_iframe: ElementRef;\n    this.data = [];\n    this.formData = [];\n    this.preview = [];\n    this.dropdownList = [];\n    this.dropdownSettings = {};\n    this.htmlContent = '';\n    this.dropdownUserList = [];\n    this.dropdownUser = {};\n    this.userArry = [];\n    this.getData = '';\n    this.selectedValue = '';\n    this.createForm();\n  }\n  // constructor(\n  //   private active: ActivatedRoute,\n  //   private fb: FormBuilder,\n  //   private FilterService: FilterService,\n  //   private router: Router,\n  //   // private form: FormComponent,\n  //   private form: FormInpComponent,\n  //   private sanitizer: DomSanitizer,\n  //   private toastr: ToastrService\n  // ) {\n  //   this.createForm();\n  // }\n  ngOnInit() {\n    this.dropdownUserList = [{\n      item_id: 1,\n      item_text: 'cpkushwaha9833@gmail.com'\n    }, {\n      item_id: 2,\n      item_text: 'User 2'\n    }, {\n      item_id: 3,\n      item_text: 'User 3'\n    }];\n    this.dropdownUser = {\n      idField: 'item_id',\n      textField: 'item_text'\n    };\n    this.dropdownList = [{\n      item_id: 1,\n      item_text: 'English'\n    }, {\n      item_id: 2,\n      item_text: 'Hindi'\n    }, {\n      item_id: 3,\n      item_text: 'Marathi'\n    }];\n    this.dropdownSettings = {\n      idField: 'item_id',\n      textField: 'item_text'\n    };\n    // this.dropdownUserList = [\n    //   { item_id: 1, item_text: 'User 1' },\n    //   { item_id: 2, item_text: 'User 2' },\n    //   { item_id: 3, item_text: 'User 3' },\n    // ];\n    // this.dropdownUser = {\n    //   idField: 'item_id',\n    //   textField: 'item_text',\n    // };\n    // this.dropdownList = [\n    //   { item_id: 1, item_text: 'English' },\n    //   { item_id: 2, item_text: 'Hindi' },\n    //   { item_id: 3, item_text: 'Marathi' },\n    // ];\n    // this.dropdownSettings = {\n    //   idField: 'item_id',\n    //   textField: 'item_text',\n    // };\n    this.active.paramMap.subscribe(params => {\n      this.id = params.get('id');\n      this.FilterService.getDataById(this.id).subscribe(result => {\n        this.htmlContent = result.data[0].body;\n        const iframe = document.getElementById('preview_iframe_5');\n        iframe['contentWindow'].document.open();\n        iframe['contentDocument'].write(this.htmlContent);\n        iframe['contentWindow'].document.close();\n        if (this.id) {\n          this.myForm.patchValue({\n            templateName: result.data[0].templateName,\n            templateCode: result.data[0].templateCode,\n            scenario: result.data[0].scenario,\n            providers: result.data[0].providers,\n            user: result.data[0].user,\n            tier: result.data[0].tier,\n            emailType: result.data[0].emailType,\n            activity: result.data[0].activity,\n            status: result.data[0].status,\n            targetAudience: result.data[0].targetAudience,\n            subject: result.data[0].subject,\n            body: result.data[0].body,\n            lang: result.data[0].lang\n          });\n        }\n      });\n    });\n  }\n  safehtmlinput($event) {\n    this.htmlContent = $event.target.value;\n    const iframe = document.getElementById('preview_iframe_5');\n    iframe['contentWindow'].document.open();\n    iframe['contentDocument'].write(this.htmlContent);\n    iframe['contentWindow'].document.close();\n    return this.urlSafe;\n  }\n  createForm() {\n    this.myForm = this.fb.group({\n      templateName: ['', Validators.required],\n      templateCode: ['', Validators.required],\n      scenario: [''],\n      providers: ['', Validators.required],\n      user: ['', Validators.required],\n      tier: ['', Validators.required],\n      emailType: ['', Validators.required],\n      activity: [''],\n      status: ['', Validators.required],\n      targetAudience: ['', Validators.required],\n      subject: ['', Validators.required],\n      body: ['', Validators.required],\n      lang: ['']\n    });\n  }\n  submit(data) {\n    this.formService.submitForm(data).subscribe(result => {\n      if (result) {\n        // this.router.navigate(['/allTemplateData']);\n        this.toastr.success('Your Data Submited successfully!!');\n      }\n    });\n  }\n  reset() {\n    this.myForm.reset();\n  }\n  seePreview(event) {\n    this.preview = event.target.value;\n  }\n  onSelect(value) {\n    this.selectedValue = value;\n  }\n  // ngOnInit(): void {\n  // this.dropdownUserList = [\n  //   { item_id: 1, item_text: 'User 1' },\n  //   { item_id: 2, item_text: 'User 2' },\n  //   { item_id: 3, item_text: 'User 3' },\n  // ];\n  // this.dropdownUser = {\n  //   idField: 'item_id',\n  //   textField: 'item_text',\n  // };\n  // this.dropdownList = [\n  //   { item_id: 1, item_text: 'English' },\n  //   { item_id: 2, item_text: 'Hindi' },\n  //   { item_id: 3, item_text: 'Marathi' },\n  // ];\n  // this.dropdownSettings = {\n  //   idField: 'item_id',\n  //   textField: 'item_text',\n  // };\n  // this.active.paramMap.subscribe((params) => {\n  //   this.id = params.get('id');\n  //   this.FilterService.getDataById(this.id).subscribe((result: any) => {\n  //     this.htmlContent = result.data[0].body;\n  //     const iframe = document.getElementById('preview_iframe_5');\n  //     iframe['contentWindow'].document.open();\n  //     iframe['contentDocument'].write(this.htmlContent);\n  //     iframe['contentWindow'].document.close();\n  //     if (this.id) {\n  //       this.myForm.patchValue({\n  //         templateName: result.data[0].templateName,\n  //         templateCode: result.data[0].templateCode,\n  //         scenario: result.data[0].scenario,\n  //         providers: result.data[0].providers,\n  //         user: result.data[0].user,\n  //         tier: result.data[0].tier,\n  //         emailType: result.data[0].emailType,\n  //         activity: result.data[0].activity,\n  //         status: result.data[0].status,\n  //         targetAudience: result.data[0].targetAudience,\n  //         subject: result.data[0].subject,\n  //         body: result.data[0].body,\n  //         lang: result.data[0].lang,\n  //       });\n  //     }\n  //   });\n  // });\n  // }\n  // createForm() {\n  //   this.myForm = this.fb.group({\n  //     templateName: ['', Validators.required],\n  //     templateCode: ['', Validators.required],\n  //     scenario: [''],\n  //     providers: ['', Validators.required],\n  //     user: ['', Validators.required],\n  //     tier: ['', Validators.required],\n  //     emailType: ['', Validators.required],\n  //     activity: [''],\n  //     status: ['', Validators.required],\n  //     targetAudience: ['', Validators.required],\n  //     subject: ['', Validators.required],\n  //     body: ['', Validators.required],\n  //     lang: ['', Validators.required],\n  //   });\n  // }\n  // preview: any;\n  // seePreview(event: any) {\n  //   this.preview = event.target.value;\n  // }\n  // reset() {\n  //   this.myForm.reset();\n  // }\n  // selectedValue: any = '';\n  // onSelect(value: any) {\n  //   this.selectedValue = value;\n  // }\n  updateUser(data) {\n    this.active.paramMap.subscribe(params => {\n      this.id = params.get('id');\n      if (this.id) {\n        this.FilterService.update(this.id, data).subscribe(result => {\n          if (result) {\n            this.router.navigate(['/allTemplateData']);\n            this.toastr.success('Your Data Updated successfully!!');\n          }\n        });\n      }\n    });\n  }\n  // safehtmlinput($event: any) {\n  //   this.htmlContent = $event.target.value;\n  //   const iframe = document.getElementById('preview_iframe_5');\n  //   iframe['contentWindow'].document.open();\n  //   iframe['contentDocument'].write(this.htmlContent);\n  //   iframe['contentWindow'].document.close();\n  // }\n  edit() {\n    this.myForm.patchValue({\n      templateName: this.form.myForm.value\n    });\n  }\n};\n__decorate([ViewChild('iframe')], FormInpComponent.prototype, \"preview_iframe\", void 0);\nFormInpComponent = __decorate([Component({\n  selector: 'app-form-inp',\n  templateUrl: './form-inp.component.html',\n  styleUrls: ['./form-inp.component.css']\n})], FormInpComponent);\nexport { FormInpComponent };","map":{"version":3,"mappings":"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","names":["Component","ViewChild","Validators","FormInpComponent","constructor","active","FilterService","fb","formService","router","toastr","sanitizer","form","createForm","ngOnInit","dropdownUserList","item_id","item_text","dropdownUser","idField","textField","dropdownList","dropdownSettings","paramMap","subscribe","params","id","get","getDataById","result","htmlContent","data","body","iframe","document","getElementById","open","write","close","myForm","patchValue","templateName","templateCode","scenario","providers","user","tier","emailType","activity","status","targetAudience","subject","lang","safehtmlinput","$event","target","value","urlSafe","group","required","submit","submitForm","success","reset","seePreview","event","preview","onSelect","selectedValue","updateUser","update","navigate","edit","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/chandraprakash/Documents/masterEmail/frontend/EmailCom/src/app/shared/form-inp/form-inp.component.ts"],"sourcesContent":["import { Component, ElementRef, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\nimport { ToastrService } from 'ngx-toastr';\nimport { FormServiceService } from 'src/app/home/form-service.service';\nimport { FilterService } from '../../filter/filter.service';\n\n\n@Component({\n  selector: 'app-form-inp',\n  templateUrl: './form-inp.component.html',\n  styleUrls: ['./form-inp.component.css']\n})\nexport class FormInpComponent {\n\n  @ViewChild('iframe') preview_iframe: ElementRef;\n  // @ViewChild('iframe') preview_iframe: ElementRef;\n\n  data: any = [];\n  formData: any = [];\n  myForm: FormGroup;\n  preview: any = [];\n  dropdownList = [];\n  dropdownSettings: IDropdownSettings = {};\n  urlSafe: SafeResourceUrl;\n  htmlContent: string = '';\n  dropdownUserList = [];\n  dropdownUser: IDropdownSettings = {};\n  userArry: any = [];\n  getData: any = '';\n\n\n  // myForm: FormGroup;\n  id: any;\n  // dropdownList = [];\n  // dropdownSettings: IDropdownSettings = {};\n  // data: any;\n  // urlSafe: SafeResourceUrl;\n  // htmlContent: string = '';\n  // dropdownUserList = [];\n  // dropdownUser: IDropdownSettings = {};\n\n  constructor(\n    private active: ActivatedRoute,\n    private FilterService: FilterService,\n    private fb: FormBuilder,\n    private formService: FormServiceService,\n    private router: Router,\n    private toastr: ToastrService,\n    public sanitizer: DomSanitizer,\n    private form: FormInpComponent,\n\n  ) {\n    this.createForm();\n  }\n\n\n\n  // constructor(\n  //   private active: ActivatedRoute,\n  //   private fb: FormBuilder,\n  //   private FilterService: FilterService,\n  //   private router: Router,\n  //   // private form: FormComponent,\n  //   private form: FormInpComponent,\n  //   private sanitizer: DomSanitizer,\n  //   private toastr: ToastrService\n  // ) {\n  //   this.createForm();\n  // }\n\n\n  ngOnInit(): void {\n    this.dropdownUserList = [\n      { item_id: 1, item_text: 'cpkushwaha9833@gmail.com' },\n      { item_id: 2, item_text: 'User 2' },\n      { item_id: 3, item_text: 'User 3' },\n    ];\n    this.dropdownUser = {\n      idField: 'item_id',\n      textField: 'item_text',\n    };\n\n    this.dropdownList = [\n      { item_id: 1, item_text: 'English' },\n      { item_id: 2, item_text: 'Hindi' },\n      { item_id: 3, item_text: 'Marathi' },\n    ];\n\n    this.dropdownSettings = {\n      idField: 'item_id',\n      textField: 'item_text',\n    };\n\n\n\n    // this.dropdownUserList = [\n    //   { item_id: 1, item_text: 'User 1' },\n    //   { item_id: 2, item_text: 'User 2' },\n    //   { item_id: 3, item_text: 'User 3' },\n    // ];\n    // this.dropdownUser = {\n    //   idField: 'item_id',\n    //   textField: 'item_text',\n    // };\n\n    // this.dropdownList = [\n    //   { item_id: 1, item_text: 'English' },\n    //   { item_id: 2, item_text: 'Hindi' },\n    //   { item_id: 3, item_text: 'Marathi' },\n    // ];\n\n    // this.dropdownSettings = {\n    //   idField: 'item_id',\n    //   textField: 'item_text',\n    // };\n\n    this.active.paramMap.subscribe((params) => {\n      this.id = params.get('id');\n\n      this.FilterService.getDataById(this.id).subscribe((result: any) => {\n        this.htmlContent = result.data[0].body;\n        const iframe = document.getElementById('preview_iframe_5');\n        iframe['contentWindow'].document.open();\n        iframe['contentDocument'].write(this.htmlContent);\n        iframe['contentWindow'].document.close();\n        if (this.id) {\n          this.myForm.patchValue({\n            templateName: result.data[0].templateName,\n            templateCode: result.data[0].templateCode,\n            scenario: result.data[0].scenario,\n            providers: result.data[0].providers,\n            user: result.data[0].user,\n            tier: result.data[0].tier,\n            emailType: result.data[0].emailType,\n            activity: result.data[0].activity,\n            status: result.data[0].status,\n            targetAudience: result.data[0].targetAudience,\n            subject: result.data[0].subject,\n            body: result.data[0].body,\n            lang: result.data[0].lang,\n          });\n        }\n      });\n    });\n\n  }\n\n  safehtmlinput($event: any) {\n    this.htmlContent = $event.target.value;\n    const iframe = document.getElementById('preview_iframe_5');\n    iframe['contentWindow'].document.open();\n    iframe['contentDocument'].write(this.htmlContent);\n    iframe['contentWindow'].document.close();\n\n    return this.urlSafe;\n  }\n\n  createForm() {\n    this.myForm = this.fb.group({\n      templateName: ['', Validators.required],\n      templateCode: ['', Validators.required],\n      scenario: [''],\n      providers: ['', Validators.required],\n      user: ['', Validators.required],\n      tier: ['', Validators.required],\n      emailType: ['', Validators.required],\n      activity: [''],\n      status: ['', Validators.required],\n      targetAudience: ['', Validators.required],\n      subject: ['', Validators.required],\n      body: ['', Validators.required],\n      lang: [''],\n    });\n  }\n\n  submit(data: any) {\n    this.formService.submitForm(data).subscribe((result: any) => {\n      if (result) {\n        // this.router.navigate(['/allTemplateData']);\n        this.toastr.success<any>('Your Data Submited successfully!!');\n      }\n    });\n  }\n\n  reset() {\n    this.myForm.reset();\n  }\n\n  seePreview(event: any) {\n    this.preview = event.target.value;\n  }\n\n  selectedValue: any = '';\n\n  onSelect(value: any) {\n    this.selectedValue = value;\n  }\n\n\n\n\n\n \n\n \n\n\n\n  // ngOnInit(): void {\n    // this.dropdownUserList = [\n    //   { item_id: 1, item_text: 'User 1' },\n    //   { item_id: 2, item_text: 'User 2' },\n    //   { item_id: 3, item_text: 'User 3' },\n    // ];\n    // this.dropdownUser = {\n    //   idField: 'item_id',\n    //   textField: 'item_text',\n    // };\n\n    // this.dropdownList = [\n    //   { item_id: 1, item_text: 'English' },\n    //   { item_id: 2, item_text: 'Hindi' },\n    //   { item_id: 3, item_text: 'Marathi' },\n    // ];\n\n    // this.dropdownSettings = {\n    //   idField: 'item_id',\n    //   textField: 'item_text',\n    // };\n\n    // this.active.paramMap.subscribe((params) => {\n    //   this.id = params.get('id');\n\n    //   this.FilterService.getDataById(this.id).subscribe((result: any) => {\n    //     this.htmlContent = result.data[0].body;\n    //     const iframe = document.getElementById('preview_iframe_5');\n    //     iframe['contentWindow'].document.open();\n    //     iframe['contentDocument'].write(this.htmlContent);\n    //     iframe['contentWindow'].document.close();\n    //     if (this.id) {\n    //       this.myForm.patchValue({\n    //         templateName: result.data[0].templateName,\n    //         templateCode: result.data[0].templateCode,\n    //         scenario: result.data[0].scenario,\n    //         providers: result.data[0].providers,\n    //         user: result.data[0].user,\n    //         tier: result.data[0].tier,\n    //         emailType: result.data[0].emailType,\n    //         activity: result.data[0].activity,\n    //         status: result.data[0].status,\n    //         targetAudience: result.data[0].targetAudience,\n    //         subject: result.data[0].subject,\n    //         body: result.data[0].body,\n    //         lang: result.data[0].lang,\n    //       });\n    //     }\n    //   });\n    // });\n  // }\n\n  // createForm() {\n  //   this.myForm = this.fb.group({\n  //     templateName: ['', Validators.required],\n  //     templateCode: ['', Validators.required],\n  //     scenario: [''],\n  //     providers: ['', Validators.required],\n  //     user: ['', Validators.required],\n  //     tier: ['', Validators.required],\n  //     emailType: ['', Validators.required],\n  //     activity: [''],\n  //     status: ['', Validators.required],\n  //     targetAudience: ['', Validators.required],\n  //     subject: ['', Validators.required],\n  //     body: ['', Validators.required],\n  //     lang: ['', Validators.required],\n  //   });\n  // }\n\n  // preview: any;\n\n  // seePreview(event: any) {\n  //   this.preview = event.target.value;\n  // }\n\n  // reset() {\n  //   this.myForm.reset();\n  // }\n\n  // selectedValue: any = '';\n\n  // onSelect(value: any) {\n  //   this.selectedValue = value;\n  // }\n\n  updateUser(data: any) {\n    this.active.paramMap.subscribe((params) => {\n      this.id = params.get('id');\n\n      if (this.id) {\n        this.FilterService.update(this.id, data).subscribe((result: any) => {\n          if (result) {\n            this.router.navigate(['/allTemplateData']);\n            this.toastr.success<any>('Your Data Updated successfully!!');\n          }\n        });\n      }\n    });\n  }\n\n  // safehtmlinput($event: any) {\n  //   this.htmlContent = $event.target.value;\n  //   const iframe = document.getElementById('preview_iframe_5');\n  //   iframe['contentWindow'].document.open();\n  //   iframe['contentDocument'].write(this.htmlContent);\n  //   iframe['contentWindow'].document.close();\n  // }\n\n  edit() {\n    this.myForm.patchValue({\n      templateName: this.form.myForm.value,\n    });\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}