{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst _c0 = [\"iframe\"];\nexport class UpdateUserComponent {\n  // myForm: FormGroup;\n  // id: any;\n  // dropdownList = [];\n  // dropdownSettings: IDropdownSettings = {};\n  // data: any;\n  // urlSafe: SafeResourceUrl;\n  // htmlContent: string = '';\n  // dropdownUserList = [];\n  // dropdownUser: IDropdownSettings = {};\n  constructor() {\n    // this.createForm();\n  }\n  ngOnInit() {\n    // this.dropdownUserList = [\n    //   { item_id: 1, item_text: 'User 1' },\n    //   { item_id: 2, item_text: 'User 2' },\n    //   { item_id: 3, item_text: 'User 3' },\n    // ];\n    // this.dropdownUser = {\n    //   idField: 'item_id',\n    //   textField: 'item_text',\n    // };\n    // this.dropdownList = [\n    //   { item_id: 1, item_text: 'English' },\n    //   { item_id: 2, item_text: 'Hindi' },\n    //   { item_id: 3, item_text: 'Marathi' },\n    // ];\n    // this.dropdownSettings = {\n    //   idField: 'item_id',\n    //   textField: 'item_text',\n    // };\n    // this.active.paramMap.subscribe((params) => {\n    //   this.id = params.get('id');\n    //   this.FilterService.getDataById(this.id).subscribe((result: any) => {\n    //     this.htmlContent = result.data[0].body;\n    //     const iframe = document.getElementById('preview_iframe_5');\n    //     iframe['contentWindow'].document.open();\n    //     iframe['contentDocument'].write(this.htmlContent);\n    //     iframe['contentWindow'].document.close();\n    //     if (this.id) {\n    //       this.myForm.patchValue({\n    //         templateName: result.data[0].templateName,\n    //         templateCode: result.data[0].templateCode,\n    //         scenario: result.data[0].scenario,\n    //         providers: result.data[0].providers,\n    //         user: result.data[0].user,\n    //         tier: result.data[0].tier,\n    //         emailType: result.data[0].emailType,\n    //         activity: result.data[0].activity,\n    //         status: result.data[0].status,\n    //         targetAudience: result.data[0].targetAudience,\n    //         subject: result.data[0].subject,\n    //         body: result.data[0].body,\n    //         lang: result.data[0].lang,\n    //       });\n    //     }\n    //   });\n    // });\n  }\n}\nUpdateUserComponent.ɵfac = function UpdateUserComponent_Factory(t) {\n  return new (t || UpdateUserComponent)();\n};\nUpdateUserComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UpdateUserComponent,\n  selectors: [[\"app-update-user\"]],\n  viewQuery: function UpdateUserComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.preview_iframe = _t.first);\n    }\n  },\n  decls: 6,\n  vars: 0,\n  consts: [[\"aria-label\", \"breadcrumb\", 1, \"m-4\"], [1, \"breadcrumb\"], [1, \"breadcrumb-item\"], [\"routerLink\", \"/allTemplateData\"]],\n  template: function UpdateUserComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"nav\", 0)(1, \"ol\", 1)(2, \"li\", 2)(3, \"a\", 3);\n      i0.ɵɵtext(4, \"Back\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelement(5, \"app-form-inp\");\n    }\n  },\n  dependencies: [i1.RouterLink],\n  styles: [\".underlineHover[_ngcontent-%COMP%]:after {\\n    display: block;\\n    left: 0;\\n    bottom: -10px;\\n    width: 0;\\n    height: 2px;\\n    background-color: #56baed;\\n    content: \\\"\\\";\\n    transition: width 0.2s;\\n  }\\n  \\n  .underlineHover[_ngcontent-%COMP%]:hover {\\n    color: #0d0d0d;\\n  }\\n  \\n  .underlineHover[_ngcontent-%COMP%]:hover:after{\\n    width: 100%;\\n  }\\n\\n  span[_ngcontent-%COMP%] {\\n    color: #92badd;\\n    display:inline-block;\\n    text-decoration: none;\\n    font-weight: 400;\\n  }\\n\\n \\n\\n  .button[_ngcontent-%COMP%]{\\n    display: flex;\\n    justify-content: center;\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZmlsdGVyL3VwZGF0ZS11c2VyL3VwZGF0ZS11c2VyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxjQUFjO0lBQ2QsT0FBTztJQUNQLGFBQWE7SUFDYixRQUFRO0lBQ1IsV0FBVztJQUNYLHlCQUF5QjtJQUN6QixXQUFXO0lBQ1gsc0JBQXNCO0VBQ3hCOztFQUVBO0lBQ0UsY0FBYztFQUNoQjs7RUFFQTtJQUNFLFdBQVc7RUFDYjs7RUFFQTtJQUNFLGNBQWM7SUFDZCxvQkFBb0I7SUFDcEIscUJBQXFCO0lBQ3JCLGdCQUFnQjtFQUNsQjs7OztFQUlBO0lBQ0UsYUFBYTtJQUNiLHVCQUF1QjtFQUN6QiIsInNvdXJjZXNDb250ZW50IjpbIi51bmRlcmxpbmVIb3ZlcjphZnRlciB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbGVmdDogMDtcbiAgICBib3R0b206IC0xMHB4O1xuICAgIHdpZHRoOiAwO1xuICAgIGhlaWdodDogMnB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM1NmJhZWQ7XG4gICAgY29udGVudDogXCJcIjtcbiAgICB0cmFuc2l0aW9uOiB3aWR0aCAwLjJzO1xuICB9XG4gIFxuICAudW5kZXJsaW5lSG92ZXI6aG92ZXIge1xuICAgIGNvbG9yOiAjMGQwZDBkO1xuICB9XG4gIFxuICAudW5kZXJsaW5lSG92ZXI6aG92ZXI6YWZ0ZXJ7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cblxuICBzcGFuIHtcbiAgICBjb2xvcjogIzkyYmFkZDtcbiAgICBkaXNwbGF5OmlubGluZS1ibG9jaztcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgfVxuXG4gXG5cbiAgLmJ1dHRvbntcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICB9XG5cbiAgIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;AAiBA,OAAM,MAAOA,mBAAmB;EAG9B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEAC;IASE;EAAA;EAGFC,QAAQ;IACN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA;;AAtESF,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAAG;EAAAC;IAAA;;;;;;;;;;;;;MCjBhCC,8BAAyC;MAEwBA,oBAAI;MAAAA,iBAAI;MAIzEA,+BAA6B","names":["UpdateUserComponent","constructor","ngOnInit","selectors","viewQuery","i0"],"sourceRoot":"","sources":["/home/chandraprakash/Documents/masterEmail/frontend/EmailCom/src/app/filter/update-user/update-user.component.ts","/home/chandraprakash/Documents/masterEmail/frontend/EmailCom/src/app/filter/update-user/update-user.component.html"],"sourcesContent":["import { Component, ElementRef, ViewChild, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FilterService } from '../filter.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n// import { FormComponent } from 'src/app/home/form/form.component';\nimport { FormInpComponent } from 'src/app/shared/form-inp/form-inp.component';\nimport { FormServiceService } from 'src/app/home/form-service.service';\nimport { FilterComponent } from '../searchFilter/filter.component';\nimport { ToastrService } from 'ngx-toastr';\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-update-user',\n  templateUrl: './update-user.component.html',\n  styleUrls: ['./update-user.component.css'],\n})\nexport class UpdateUserComponent implements OnInit {\n  @ViewChild('iframe') preview_iframe: ElementRef;\n\n  // myForm: FormGroup;\n  // id: any;\n  // dropdownList = [];\n  // dropdownSettings: IDropdownSettings = {};\n  // data: any;\n  // urlSafe: SafeResourceUrl;\n  // htmlContent: string = '';\n  // dropdownUserList = [];\n  // dropdownUser: IDropdownSettings = {};\n\n  constructor() // private active: ActivatedRoute,\n  // private fb: FormBuilder,\n  // private FilterService: FilterService,\n  // private router: Router,\n  // // private form: FormComponent,\n  // private form: FormInpComponent,\n  // private sanitizer: DomSanitizer,\n  // private toastr: ToastrService\n  {\n    // this.createForm();\n  }\n\n  ngOnInit(): void {\n    // this.dropdownUserList = [\n    //   { item_id: 1, item_text: 'User 1' },\n    //   { item_id: 2, item_text: 'User 2' },\n    //   { item_id: 3, item_text: 'User 3' },\n    // ];\n    // this.dropdownUser = {\n    //   idField: 'item_id',\n    //   textField: 'item_text',\n    // };\n    // this.dropdownList = [\n    //   { item_id: 1, item_text: 'English' },\n    //   { item_id: 2, item_text: 'Hindi' },\n    //   { item_id: 3, item_text: 'Marathi' },\n    // ];\n    // this.dropdownSettings = {\n    //   idField: 'item_id',\n    //   textField: 'item_text',\n    // };\n    // this.active.paramMap.subscribe((params) => {\n    //   this.id = params.get('id');\n    //   this.FilterService.getDataById(this.id).subscribe((result: any) => {\n    //     this.htmlContent = result.data[0].body;\n    //     const iframe = document.getElementById('preview_iframe_5');\n    //     iframe['contentWindow'].document.open();\n    //     iframe['contentDocument'].write(this.htmlContent);\n    //     iframe['contentWindow'].document.close();\n    //     if (this.id) {\n    //       this.myForm.patchValue({\n    //         templateName: result.data[0].templateName,\n    //         templateCode: result.data[0].templateCode,\n    //         scenario: result.data[0].scenario,\n    //         providers: result.data[0].providers,\n    //         user: result.data[0].user,\n    //         tier: result.data[0].tier,\n    //         emailType: result.data[0].emailType,\n    //         activity: result.data[0].activity,\n    //         status: result.data[0].status,\n    //         targetAudience: result.data[0].targetAudience,\n    //         subject: result.data[0].subject,\n    //         body: result.data[0].body,\n    //         lang: result.data[0].lang,\n    //       });\n    //     }\n    //   });\n    // });\n  }\n\n  // createForm() {\n  //   this.myForm = this.fb.group({\n  //     templateName: ['', Validators.required],\n  //     templateCode: ['', Validators.required],\n  //     scenario: [''],\n  //     providers: ['', Validators.required],\n  //     user: ['', Validators.required],\n  //     tier: ['', Validators.required],\n  //     emailType: ['', Validators.required],\n  //     activity: [''],\n  //     status: ['', Validators.required],\n  //     targetAudience: ['', Validators.required],\n  //     subject: ['', Validators.required],\n  //     body: ['', Validators.required],\n  //     lang: ['', Validators.required],\n  //   });\n  // }\n\n  // preview: any;\n\n  // seePreview(event: any) {\n  //   this.preview = event.target.value;\n  // }\n\n  // reset() {\n  //   this.myForm.reset();\n  // }\n\n  // selectedValue: any = '';\n\n  // onSelect(value: any) {\n  //   this.selectedValue = value;\n  // }\n\n  // updateUser(data: any) {\n  //   this.active.paramMap.subscribe((params) => {\n  //     this.id = params.get('id');\n\n  //     if (this.id) {\n  //       this.FilterService.update(this.id, data).subscribe((result: any) => {\n  //         if (result) {\n  //           this.router.navigate(['/allTemplateData']);\n  //           this.toastr.success<any>('Your Data Updated successfully!!');\n  //         }\n  //       });\n  //     }\n  //   });\n  // }\n\n  // safehtmlinput($event: any) {\n  //   this.htmlContent = $event.target.value;\n  //   const iframe = document.getElementById('preview_iframe_5');\n  //   iframe['contentWindow'].document.open();\n  //   iframe['contentDocument'].write(this.htmlContent);\n  //   iframe['contentWindow'].document.close();\n  // }\n\n  // edit() {\n  //   this.myForm.patchValue({\n  //     templateName: this.form.myForm.value,\n  //   });\n  // }\n}\n","<nav aria-label=\"breadcrumb\" class=\"m-4\">\n  <ol class=\"breadcrumb\">\n    <li class=\"breadcrumb-item\"><a routerLink=\"/allTemplateData\">Back</a></li>\n  </ol>\n</nav>\n\n<app-form-inp></app-form-inp>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}