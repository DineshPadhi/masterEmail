{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../shared/form-inp/form-inp.component\";\nexport class FormComponent {\n  // @ViewChild('iframe') preview_iframe: ElementRef;\n  // data: any = [];\n  // formData: any = [];\n  // myForm: FormGroup;\n  // preview: any = [];\n  // dropdownList = [];\n  // dropdownSettings: IDropdownSettings = {};\n  // urlSafe: SafeResourceUrl;\n  // htmlContent: string = '';\n  // dropdownUserList = [];\n  // dropdownUser: IDropdownSettings = {};\n  // userArry: any = [];\n  // getData: any = '';\n  constructor() {\n    // this.createForm();\n  }\n  ngOnInit() {}\n}\nFormComponent.ɵfac = function FormComponent_Factory(t) {\n  return new (t || FormComponent)();\n};\nFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FormComponent,\n  selectors: [[\"app-form\"]],\n  hostVars: 2,\n  hostBindings: function FormComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵhostProperty(\"sandbox\", \"allow-scripts\", i0.ɵɵvalidateIframeAttribute);\n      i0.ɵɵattribute(\"sandbox\", \"allow-scripts\", i0.ɵɵvalidateIframeAttribute);\n    }\n  },\n  decls: 1,\n  vars: 0,\n  template: function FormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-form-inp\");\n    }\n  },\n  dependencies: [i1.FormInpComponent],\n  styles: [\".underlineHover[_ngcontent-%COMP%]:after {\\n    display: block;\\n    left: 0;\\n    bottom: -10px;\\n    width: 0;\\n    height: 2px;\\n    background-color: #56baed;\\n    content: \\\"\\\";\\n    transition: width 0.2s;\\n  }\\n  \\n  .underlineHover[_ngcontent-%COMP%]:hover {\\n    color: #0d0d0d;\\n  }\\n  \\n  .underlineHover[_ngcontent-%COMP%]:hover:after{\\n    width: 100%;\\n  }\\n\\n  span[_ngcontent-%COMP%] {\\n    color: #92badd;\\n    display:inline-block;\\n    text-decoration: none;\\n    font-weight: 400;\\n  }\\n\\n \\n\\n  .button[_ngcontent-%COMP%]{\\n    display: flex;\\n    justify-content: center;\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvaG9tZS9mb3JtL2Zvcm0uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGNBQWM7SUFDZCxPQUFPO0lBQ1AsYUFBYTtJQUNiLFFBQVE7SUFDUixXQUFXO0lBQ1gseUJBQXlCO0lBQ3pCLFdBQVc7SUFDWCxzQkFBc0I7RUFDeEI7O0VBRUE7SUFDRSxjQUFjO0VBQ2hCOztFQUVBO0lBQ0UsV0FBVztFQUNiOztFQUVBO0lBQ0UsY0FBYztJQUNkLG9CQUFvQjtJQUNwQixxQkFBcUI7SUFDckIsZ0JBQWdCO0VBQ2xCOzs7O0VBSUE7SUFDRSxhQUFhO0lBQ2IsdUJBQXVCO0VBQ3pCIiwic291cmNlc0NvbnRlbnQiOlsiLnVuZGVybGluZUhvdmVyOmFmdGVyIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBsZWZ0OiAwO1xuICAgIGJvdHRvbTogLTEwcHg7XG4gICAgd2lkdGg6IDA7XG4gICAgaGVpZ2h0OiAycHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzU2YmFlZDtcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIHRyYW5zaXRpb246IHdpZHRoIDAuMnM7XG4gIH1cbiAgXG4gIC51bmRlcmxpbmVIb3Zlcjpob3ZlciB7XG4gICAgY29sb3I6ICMwZDBkMGQ7XG4gIH1cbiAgXG4gIC51bmRlcmxpbmVIb3Zlcjpob3ZlcjphZnRlcntcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuXG4gIHNwYW4ge1xuICAgIGNvbG9yOiAjOTJiYWRkO1xuICAgIGRpc3BsYXk6aW5saW5lLWJsb2NrO1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICB9XG5cbiBcblxuICAuYnV0dG9ue1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIH0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":";;AAiBA,OAAM,MAAOA,aAAa;EACxB;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEAC;IAOE;EAAA;EAGFC,QAAQ,IAAU;;AA1BPF,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAG;EAAAC;EAAAC;IAAA;;;;;;;;;MCjB1BC,+BAA6B","names":["FormComponent","constructor","ngOnInit","selectors","hostVars","hostBindings","i0"],"sourceRoot":"","sources":["/home/chandraprakash/Documents/masterEmail/frontend/EmailCom/src/app/home/form/form.component.ts","/home/chandraprakash/Documents/masterEmail/frontend/EmailCom/src/app/home/form/form.component.html"],"sourcesContent":["import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { FormServiceService } from '../form-service.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-form',\n  host: {\n    '[sandbox]': `'allow-scripts'`,\n    '[attr.sandbox]': `'allow-scripts'`,\n  },\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.css'],\n})\nexport class FormComponent implements OnInit {\n  // @ViewChild('iframe') preview_iframe: ElementRef;\n\n  // data: any = [];\n  // formData: any = [];\n  // myForm: FormGroup;\n  // preview: any = [];\n  // dropdownList = [];\n  // dropdownSettings: IDropdownSettings = {};\n  // urlSafe: SafeResourceUrl;\n  // htmlContent: string = '';\n  // dropdownUserList = [];\n  // dropdownUser: IDropdownSettings = {};\n  // userArry: any = [];\n  // getData: any = '';\n\n  constructor(\n    // private fb: FormBuilder,\n    // private formService: FormServiceService,\n    // private router: Router,\n    // private toastr: ToastrService,\n    // public sanitizer: DomSanitizer\n  ) {\n    // this.createForm();\n  }\n\n  ngOnInit(): void {}\n  //   this.dropdownUserList = [\n  //     { item_id: 1, item_text: 'cpkushwaha9833@gmail.com' },\n  //     { item_id: 2, item_text: 'User 2' },\n  //     { item_id: 3, item_text: 'User 3' },\n  //   ];\n  //   this.dropdownUser = {\n  //     idField: 'item_id',\n  //     textField: 'item_text',\n  //   };\n\n  //   this.dropdownList = [\n  //     { item_id: 1, item_text: 'English' },\n  //     { item_id: 2, item_text: 'Hindi' },\n  //     { item_id: 3, item_text: 'Marathi' },\n  //   ];\n\n  //   this.dropdownSettings = {\n  //     idField: 'item_id',\n  //     textField: 'item_text',\n  //   };\n  // }\n\n  // safehtmlinput($event: any) {\n  //   this.htmlContent = $event.target.value;\n  //   const iframe = document.getElementById('preview_iframe_5');\n  //   iframe['contentWindow'].document.open();\n  //   iframe['contentDocument'].write(this.htmlContent);\n  //   iframe['contentWindow'].document.close();\n\n  //   return this.urlSafe;\n  // }\n\n  // createForm() {\n  //   this.myForm = this.fb.group({\n  //     templateName: ['', Validators.required],\n  //     templateCode: ['', Validators.required],\n  //     scenario: [''],\n  //     providers: ['', Validators.required],\n  //     user: ['', Validators.required],\n  //     tier: ['', Validators.required],\n  //     emailType: ['', Validators.required],\n  //     activity: [''],\n  //     status: ['', Validators.required],\n  //     targetAudience: ['', Validators.required],\n  //     subject: ['', Validators.required],\n  //     body: ['', Validators.required],\n  //     lang: [''],\n  //   });\n  // }\n\n  // submit(data: any) {\n  //   this.formService.submitForm(data).subscribe((result: any) => {\n  //     if (result) {\n  //       // this.router.navigate(['/allTemplateData']);\n  //       this.toastr.success<any>('Your Data Submited successfully!!');\n  //     }\n  //   });\n  // }\n\n  // reset() {\n  //   this.myForm.reset();\n  // }\n\n  // seePreview(event: any) {\n  //   this.preview = event.target.value;\n  // }\n\n  // selectedValue: any = '';\n\n  // onSelect(value: any) {\n  //   this.selectedValue = value;\n  // }\n}\n","<app-form-inp></app-form-inp>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}